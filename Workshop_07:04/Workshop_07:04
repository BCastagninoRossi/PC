### GIT WORKSHOP ###Un REPO tiene toda la documentacion de un proyecto junto con todas sus ramas y versionesBRANCHES:    Son como un 'snapshot' en la historia del codigo base    Estan presentes en el repositorio local y pueden ser pusheadas al remoto    No tienen costo y permiten trabajar simultaneamente en distintos flujos de trabajo    Usarlas permite ordenar el desarrollo y trabajar en equipo sin temor al error de otros    Es posible combinar BRANCHES haciendo un MERGE y así unificar el trabajo realizado por distintas personas    Agregar Branches NO TIENE costo compurtacional adicional        Hay un branch MAIN que es el principal de todos, el que tiene la version final    PULL REQUESTS/MERGE REQUESTS    Es como que, trabajando en un BRANCH hago un pedido de que se incorpore al MAIN (u otro branch)    Uno podria MERGEAR una BRANCH SIN hacer un PULL REQUEST pero NO ESTA PIOLA, porque  es una herramienta para verificar que el BRANCH no cague el MAIN    Es una manera de 'Sociabilizar' el MERGE    Facilita una CORDINACION ASINCRÓNICA    Cuando se crea el PR se debe seleccionar el Branch de Origen y el de Destino    El PR debe incluir una DESCRIPCION de los cambios incluidos    ** Es una buena práctica crear el PR como ** draft ** apenas uno empieza a trabajar en un feature para que el resto tenga visibilidad **    ** Hay que agregar un archivo  (de nuevo, no mandatorio pero buena practica) de texto explicando los cambios del Branch a Mergear **        PR REVIEWS: Al crear un PR se abre un espacio en el que los colaboradores del proyecto pueden revisar los cambios, comentarlos, aprobarlos o rechazarlos                Uno podria agregar comentarios en líneas particulares de código                Tambien se puede comentar en el PR en sí  mismo, más general                        