# ### FUNCION SEP# print ('Hola', "Bruno") #Los separa solo# print ('Hola', 'Bruno', sep='') #con sep explicito los espacios que quiro, aqui lo puse sin espacio asi que pega las expresiones# ### FUNCION RANGE# # PROTOTIPO: range(start: int, stop: int, step: int) -> secuencia# # * comienza en start# # * avanza de a step# # * para ANTES de stop# # ejemplo: # for i in range (10):#     print (i, end=" ")  ### Lo que ocurre al agregar end="lo que sea"es que se agrega lo que sea que este entre comillas al final de cada iteracion    # for i in range (10):#     print (i, end="\n") ### \n agrega una nueva linea    # for i in range (10):#     print (i, end="/") ### separa con barras    # for i in range (100, 50, -5):#     print (i, end = ' ')    # for i in range (0, 10, -1):  #### No va a outputear nada porque no puedo llegar de 0 a 10 con saltos de -1#     print (i, end = ' ') # # Ciclo definido - suma de numeros naturales --copiar de powerpoint# n_maximo = int (input ('Número máximo? '))# suma = 0 # for n in range ()# # Ciclo definido - factorial# def factorial (n: int) -> int:#     '''Computa n!'''#     result = 1#     for i in range (1, n + 1):#         result *= i#     return result    # n = int(input('n? '))# print ( "El factorial de ", n, "es ", factorial(n))## Ciclo INDEFINIDO -- WHILE# El ciclo se repite mientras que se cumpla una condicion# Ejemplo, funcion para calcular una raíz cuadrada -- Funcion de Herón## def heron (x, guess):#     '''compute an approximate value for the root of x'''#     if (x < 0) or (guess <= 0):#         return -1.0     #     while abs (guess ** 2 - x) > 1e-4:  # 1e-4 es 1x10**-4  # Esta es la condicion#         print ('guess:', guess)#         guess = (guess + x / guess) / 2#     return guess## Ciclo INDEFINIDO -- INTERACTIVO -- CONTINUE Y BREAK....VER POWER!!!# El usuario define cuando finaliza la ejecucion# Se necesita un centinela, una condicion de corteprompt = "Ingresar una nota válida para continuar: "suma = 0.0cantidad = 0while True:    nota = float(input(prompt))    if not es_nota_valida (nota)def es_nota_valida (nota: float, minimo: float = 0) ### VER EL POWER### Ciclo indefinido -- break# Necesitamos un centinela, una condicion de corte